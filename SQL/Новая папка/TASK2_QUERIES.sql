--1 
SELECT TUTORS.TT_ID, TUTORS.TT_NAME, COUNT(DISTINCT ED_STUDENT) AS COUNT
FROM TUTORS 
LEFT JOIN EDUCATION 
ON (TUTORS.TT_ID = EDUCATION.ED_TUTOR)
GROUP BY TUTORS.TT_NAME, TUTORS.TT_ID
ORDER BY TUTORS.TT_ID;

--2 
SELECT STUDENTS.ST_ID, STUDENTS.ST_NAME, COUNT(DISTINCT EDUCATION.ED_TUTOR) AS COUNT
FROM STUDENTS 
JOIN EDUCATION 
ON (STUDENTS.ST_ID = EDUCATION.ED_STUDENT)
GROUP BY STUDENTS.ST_ID, STUDENTS.ST_NAME
ORDER BY STUDENTS.ST_ID;

--3
SELECT TUTORS.TT_ID, TUTORS.TT_NAME, COUNT(EDUCATION.ED_DATE) AS CLASSES_COUNT
FROM TUTORS
JOIN EDUCATION
ON (TUTORS.TT_ID = EDUCATION.ED_TUTOR)
WHERE EXTRACT (MONTH FROM EDUCATION.ED_DATE) = 9 AND EXTRACT(YEAR FROM EDUCATION.ED_DATE) = 2012
GROUP BY TUTORS.TT_ID, TUTORS.TT_NAME
HAVING COUNT(EDUCATION.ED_DATE) = 
	(SELECT MAX(COUNT(EDUCATION.ED_DATE))
		FROM EDUCATION 
		WHERE EXTRACT (MONTH FROM EDUCATION.ED_DATE) = 9 AND EXTRACT(YEAR FROM EDUCATION.ED_DATE) = 2012
		GROUP BY EDUCATION.ED_TUTOR
	);
	
--4
SELECT STUDENTS.ST_ID, STUDENTS.ST_NAME, AVG(EDUCATION.ED_MARK) AS AVG_MARK
FROM STUDENTS
LEFT JOIN EDUCATION ON (STUDENTS.ST_ID = EDUCATION.ED_STUDENT)
GROUP BY STUDENTS.ST_ID, STUDENTS.ST_NAME
ORDER BY ST_ID;

--5
SELECT ST_ID, ST_NAME,  LISTAGG(convert(sb_name, 'UTF8', 'AL16UTF16'), ',') WITHIN GROUP (ORDER BY SB_NAME) AS SB_NAMES, MAX_MARK
FROM EDUCATION 
LEFT JOIN SUBJECTS ON (EDUCATION.ED_SUBJECT = SUBJECTS.SB_ID)
RIGHT JOIN 
(SELECT STUDENTS.ST_ID, STUDENTS.ST_NAME, MAX(EDUCATION.ED_MARK) AS MAX_MARK 
FROM EDUCATION 
RIGHT JOIN STUDENTS ON (STUDENTS.ST_ID = ED_STUDENT)
GROUP BY STUDENTS.ST_ID, STUDENTS.ST_NAME)
ON (ST_ID = ED_STUDENT AND ED_MARK = MAX_MARK)
GROUP BY ST_ID, ST_NAME,MAX_MARK
ORDER BY ST_ID;

--6 
SELECT TT_NAME
FROM
(SELECT TUTORS.TT_NAME, MIN(EDUCATION.ED_MARK)
FROM EDUCATION
LEFT JOIN STUDENTS
ON EDUCATION.ED_STUDENT = STUDENTS.ST_ID
LEFT JOIN TUTORS
ON EDUCATION.ED_TUTOR = TUTORS.TT_ID
WHERE STUDENTS.ST_NAME = 'Соколов С.С.' AND EDUCATION.ED_MARK IS NOT NULL
GROUP BY TUTORS.TT_NAME);

--7
SET SERVEROUTPUT ON
declare
  rows_found number ;
  any_rows_found NUMBER;
begin

  SELECT COUNT(EDUCATION.ED_ID) INTO rows_found
  FROM EDUCATION
  LEFT JOIN CLASSES_TYPES
  ON EDUCATION.ED_CLASS_TYPE = CLASSES_TYPES.CT_ID
  WHERE CLASSES_TYPES.CT_NAME <> 'Лабораторная работа' AND CLASSES_TYPES.CT_NAME <> 'Экзамен' AND EDUCATION.ED_MARK IS NOT NULL;

  if rows_found >0 then any_rows_found := 1;
  else
    any_rows_found := 0;
  end if;
  
  dbms_output.Put_line(any_rows_found);
  
END any_rows_found;
/

--QUERY
SELECT CASE WHEN EXISTS(
SELECT EDUCATION.ED_ID
FROM EDUCATION
LEFT JOIN CLASSES_TYPES
ON EDUCATION.ED_CLASS_TYPE = CLASSES_TYPES.CT_ID
WHERE CLASSES_TYPES.CT_NAME <> 'Лабораторная работа' AND CLASSES_TYPES.CT_NAME <> 'Экзамен' AND EDUCATION.ED_MARK IS NOT NULL)  
THEN 1
ELSE 0
END AS ANSWER
FROM DUAL;

--8
SELECT SHORT_DATE, LISTAGG(convert(SB_NAME, 'UTF8', 'AL16UTF16'), ',') within group (ORDER BY SHORT_DATE), CLASSES_NUMBER
FROM
(SELECT SB_NAME, TO_CHAR(ED_DATE, 'YYYY-MM') AS SHORT_DATE, COUNT( OUTER_TAB.ED_ID) AS CLASSES_NUMBER
FROM EDUCATION OUTER_TAB
JOIN SUBJECTS ON (OUTER_TAB.ED_SUBJECT = SUBJECTS.SB_ID)
WHERE EXTRACT(YEAR FROM OUTER_TAB.ED_DATE) = 2012
GROUP BY SB_NAME, TO_CHAR(ED_DATE, 'YYYY-MM')
HAVING COUNT(OUTER_TAB.ED_ID) = 
  ( SELECT MAX(COUNT(ED_ID)) 
    FROM EDUCATION
    WHERE TO_CHAR(EDUCATION.ED_DATE, 'YYYY-MM') = TO_CHAR(OUTER_TAB.ED_DATE, 'YYYY-MM')
    GROUP BY EDUCATION.ED_SUBJECT, TO_CHAR(ED_DATE, 'YYYY-MM')
    )
    )
GROUP BY SHORT_DATE,CLASSES_NUMBER
ORDER BY SHORT_DATE DESC;

--9
SELECT STUDENTS.ST_ID, STUDENTS.ST_NAME, AVG(EDUCATION.ED_MARK)
FROM EDUCATION
JOIN STUDENTS ON EDUCATION.ED_STUDENT = STUDENTS.ST_ID
GROUP BY STUDENTS.ST_ID, STUDENTS.ST_NAME
HAVING AVG(EDUCATION.ED_MARK) < (SELECT AVG(EDUCATION.ED_MARK) FROM EDUCATION )
ORDER BY STUDENTS.ST_ID;

--10
SELECT STUDENTS.ST_ID, STUDENTS.ST_NAME 
FROM STUDENTS
WHERE ST_ID NOT IN (
SELECT EDUCATION.ED_STUDENT
FROM EDUCATION
JOIN SUBJECTS ON EDUCATION.ED_SUBJECT = SUBJECTS.SB_ID
WHERE SUBJECTS.SB_NAME = 'Химия' OR SUBJECTS.SB_NAME = 'Физика');

--11
SELECT STUDENTS.ST_ID, STUDENTS.ST_NAME 
FROM STUDENTS
WHERE ST_ID NOT IN (
SELECT STUDENTS.ST_ID
FROM EDUCATION
JOIN STUDENTS ON EDUCATION.ED_STUDENT = STUDENTS.ST_ID AND (EDUCATION.ED_MARK = 10))
ORDER BY STUDENTS.ST_ID;

--12
SELECT SUBJECTS.SB_ID, SUBJECTS.SB_NAME, AVG(EDUCATION.ED_MARK)
FROM EDUCATION
RIGHT JOIN SUBJECTS ON EDUCATION.ED_SUBJECT = SUBJECTS.SB_ID
GROUP BY SUBJECTS.SB_ID, SUBJECTS.SB_NAME
HAVING AVG(EDUCATION.ED_MARK) > (SELECT AVG(EDUCATION.ED_MARK) FROM EDUCATION )
ORDER BY SUBJECTS.SB_ID;

--13
SELECT  SUBJECTS.SB_ID, SUBJECTS.SB_NAME, TO_CHAR(CLASSES_PER_MONTH, '0.0000') AS CLASSES_PER_MONTH
FROM SUBJECTS 
JOIN 
(SELECT ED_SUBJECT, COUNT(ED_ID) / MONTHS_BETWEEN(MAX(ED_DATE),MIN(ED_DATE)) AS CLASSES_PER_MONTH
FROM EDUCATION
GROUP BY ED_SUBJECT)
ON SUBJECTS.SB_ID = ED_SUBJECT
ORDER BY SUBJECTS.SB_ID;







--22
SELECT st_id, st_name, COUNT (ed_id) AS C
FROM students 
JOIN education
ON (st_id = ed_student)
GROUP BY st_id, st_name
HAVING COUNT (ed_id) = 
	(SELECT MAX(CC) 
		FROM (
		SELECT COUNT (ed_id) AS CC
		FROM education
		GROUP BY education.ED_STUDENT)
	);	
