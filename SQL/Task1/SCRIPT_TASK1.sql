/* PRODUCTS  */ 

CREATE TABLE PRODUCTS (
	ID INTEGER  PRIMARY KEY,
	NAME NVARCHAR2(100) NOT NULL,
	BRAND NVARCHAR2(100) NOT NULL,
	PRICE INTEGER NOT NULL,
	DESCRIPTION varchar2(100) 
);

CREATE SEQUENCE PRODUCTS_SEQ
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;

CREATE trigger PRODUCTS_TRG
  before insert on PRODUCTS
  for each row
begin
  select PRODUCTS_SEQ.nextval into :NEW.id from dual;
end; 
/

/* CLIENT  */ 

CREATE TABLE CLIENTS (
	ID INTEGER PRIMARY KEY,
	full_name NVARCHAR2(50),
	personal_Discount smallint,
	email NVARCHAR2(50),
  constraint discount_constraint CHECK (personal_Discount BETWEEN 0 and 100)
);

CREATE SEQUENCE CLIENTS_SEQ
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;

CREATE TRIGGER CLIENTS_TRG
  BEFORE INSERT ON CLIENTS
  FOR EACH ROW
BEGIN 
  SELECT CLIENTS_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/

/* DISCOUNT  */ 

CREATE TABLE DISCOUNTS (
	ID INT PRIMARY KEY,
	NAME NVARCHAR2(50) NOT NULL,
	DESCRIPTION NVARCHAR2(50),
	APPLY_TO_ALL NUMBER(1,0) NOT NULL,
  CONSTRAINT BOOL_CONSTRAINT CHECK (APPLY_TO_ALL BETWEEN 0 AND 1)
);

CREATE SEQUENCE DISCOUNTS_SEQ
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;

CREATE TRIGGER DISCOUNTS_TRG
  BEFORE INSERT ON DISCOUNTS
  FOR EACH ROW
BEGIN 
  SELECT DISCOUNTS_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/

/* ORDER_PRODUCT  */ 

CREATE TABLE PRODUCTS_ORDERS (
	ORDER_ID INT NOT NULL,
	PRODUCT_ID INT NOT NULL,
    QUANTITY INT NOT NULL,
  CONSTRAINT PRODUCTS_ORDERS_PRIMARY_KEY PRIMARY KEY(ORDER_ID,PRODUCT_ID, QUANTITY),
  CONSTRAINT PRODUCTS_ORDERS_ORDER_FK FOREIGN KEY (ORDER_ID) REFERENCES ORDERS (ID),
  CONSTRAINT PRODUCTS_ORDERS_PRODUCT_FK FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS (ID)
);

/* PRODUCT_DISCOUNT  */ 

CREATE TABLE PRODUCTS_DISCOUNTS (
	PRODUCT_ID INT,
	DISCOUNT_ID INT,
  CONSTRAINT PRIMARY_KEY PRIMARY KEY(PRODUCT_ID,DISCOUNT_ID),
  CONSTRAINT PRODUCTS_DISCOUNTS_PRODUCT_FK FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS (ID),
  CONSTRAINT PRODUCTS_DISCOUNTS_DISCOUNT_FK FOREIGN KEY (DISCOUNT_ID) REFERENCES DISCOUNTS (ID)
);

/* RECALL */

CREATE TABLE RECALLS (
	ID INTEGER PRIMARY KEY,
	PRODUCT_ID INTEGER NOT NULL,
	CLIENT_ID INTEGER NOT NULL,
	MARK smallint NOT NULL,
	RECALL_COMMENT NVARCHAR2(1000),
	RECALL_DATE TIMESTAMP NOT NULL,
  CONSTRAINT MARK_CONSTRAINT CHECK(MARK BETWEEN 1 AND 5),
  CONSTRAINT RECALLS_CLIENT_FK FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS (ID),
  CONSTRAINT RECALLS_PRODUCT_FK FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS (ID)
);

CREATE SEQUENCE RECALLS_SEQ
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;

CREATE trigger RECALLS_TRG
  before insert on RECALLS
  for each row
begin
  select RECALLS_SEQ.nextval into :NEW.id from dual;
end; 
/

CREATE TABLE ORDERS (
    ID INTEGER PRIMARY KEY,
    CLIENT_ID INTEGER NOT NULL,
    ORDER_DATE DATE NOT NULL,
    CONSTRAINT ORDERS_CLIENT_FK FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS (ID)
);

CREATE SEQUENCE ORDERS_SEQ
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;

CREATE trigger ORDERS_TRG
  before insert on ORDERS
  for each row
begin
  select ORDERS_SEQ.nextval into :NEW.id from dual;
end; 
/

--------------------- INDEXES ---------------------

CREATE INDEX PRODUCTS_NAME_BRAND_IDX
ON PRODUCTS (NAME,BRAND);

CREATE INDEX CLIENTS_FULL_NAME_IDX
ON CLIENTS (FULL_NAME);

CREATE INDEX PRODUCTS_ORDERS_PRODUCT_ID_IDX
ON PRODUCTS_ORDERS (PRODUCT_ID);

CREATE INDEX PRODUCTS_DISCOUNTS_DISCOUNT_ID_IDX
ON PRODUCTS_DISCOUNTS(DISCOUNT_ID);

CREATE INDEX RECALLS_PRODUCT_ID_IDX
ON RECALLS(PRODUCT_ID);

CREATE INDEX RECALLS_CLIENT_ID_IDX
ON RECALLS(CLIENT_ID);

CREATE INDEX ORDERS_CLIENT_ID_IDX
ON ORDERS(CLIENT_ID);

--------------------- DATA INSERTION ---------------------



